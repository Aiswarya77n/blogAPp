{"ast":null,"code":"import { SET_AUTHENTICATED, SET_UNAUTHENTICATED, SET_USER, LOADING_USER, MARK_NOTIFICATIONS_READ, CLEAR_ERRORS, SET_ERRORS } from \"../types\";\nimport axios from \"axios\";\nexport const loginUser = (data, history) => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n  axios.post(\"/users/login\", data).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch({\n      type: SET_AUTHENTICATED\n    });\n    history.push(\"/\");\n    console.log(res);\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const signupUser = (data, history) => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post(\"/users/signup\", data).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch({\n      type: SET_AUTHENTICATED\n    });\n    history.push(\"/\");\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"token\");\n  delete axios.defaults.headers.common[\"x-auth-token\"];\n  dispatch({\n    type: SET_UNAUTHENTICATED\n  });\n};\nexport const getUserData = () => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get(\"/user\").then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\n\nconst setAuthorizationHeader = token => {\n  localStorage.setItem(\"token\", token);\n  axios.defaults.headers.common[\"x-auth-token\"] = token;\n};","map":{"version":3,"sources":["C:/Users/Hp/Downloads/blogAPp/src/redux/actions/userActions.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","SET_USER","LOADING_USER","MARK_NOTIFICATIONS_READ","CLEAR_ERRORS","SET_ERRORS","axios","loginUser","data","history","dispatch","type","post","then","res","setAuthorizationHeader","token","getUserData","push","console","log","catch","err","payload","response","signupUser","logoutUser","localStorage","removeItem","defaults","headers","common","get","setItem"],"mappings":"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","sourcesContent":["import {\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  SET_USER,\r\n  LOADING_USER,\r\n  MARK_NOTIFICATIONS_READ,\r\n  CLEAR_ERRORS,\r\n  SET_ERRORS,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const loginUser = (data, history) => (dispatch) => {\r\n  dispatch({ type: LOADING_USER });\r\n  dispatch({ type: CLEAR_ERRORS });\r\n\r\n  axios\r\n    .post(\"/users/login\", data)\r\n    .then((res) => {\r\n      setAuthorizationHeader(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      dispatch({ type: SET_AUTHENTICATED });\r\n      history.push(\"/\");\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\nexport const signupUser = (data, history) => (dispatch) => {\r\n  dispatch({ type: LOADING_USER });\r\n\r\n  axios\r\n    .post(\"/users/signup\", data)\r\n    .then((res) => {\r\n      setAuthorizationHeader(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      dispatch({ type: SET_AUTHENTICATED });\r\n      history.push(\"/\");\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem(\"token\");\r\n  delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n  dispatch({ type: LOADING_USER });\r\n  axios\r\n    .get(\"/user\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_USER,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n  localStorage.setItem(\"token\", token);\r\n  axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}