{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Downloads\\\\blogAPp\\\\src\\\\pages\\\\PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\nimport { getPostDetail, likePost } from \"../redux/actions/dataActions\";\nimport { useParams } from \"react-router-dom\";\nimport { AccountCircle, ThumbUpAlt } from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport CommentBox from \"../components/CommentBox\";\nimport CommentForm from \"../components/CommentForm\";\n\nfunction PostDetail() {\n  _s();\n\n  var _data$comments;\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.data.posts);\n  const post = useSelector(state => state.data.post.post);\n  const data = useSelector(state => state.data.post);\n  const likes = useSelector(state => state.user.likes);\n  const params = useParams();\n  const [isLike, setIsLike] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      const title = await params.id;\n      const selectedPost = await posts.filter(post => post.title === title);\n\n      if (selectedPost.length > 0) {\n        var _selectedPost$;\n\n        dispatch(getPostDetail((_selectedPost$ = selectedPost[0]) === null || _selectedPost$ === void 0 ? void 0 : _selectedPost$._id));\n      }\n    }\n\n    fetchData();\n  }, [dispatch, params.id, posts]);\n  useEffect(() => {\n    async function fetchIsLike() {\n      const like = await likes.filter(like => like.post === (post === null || post === void 0 ? void 0 : post._id)).length;\n\n      if (like > 0) {\n        setIsLike(true);\n      } else {\n        setIsLike(false);\n      }\n    }\n\n    fetchIsLike();\n  }, [likes, post === null || post === void 0 ? void 0 : post._id]);\n\n  const handleLike = () => {\n    dispatch(likePost(post._id));\n    setIsLike(!isLike);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    margin: \"0 0 50px 0\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"h5\",\n        children: post === null || post === void 0 ? void 0 : post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        align: \"right\",\n        variant: \"body2\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), post === null || post === void 0 ? void 0 : post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: post === null || post === void 0 ? void 0 : post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginTop: \"10px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: IconButton,\n        display: \"flex\",\n        alignItems: \"center\",\n        onClick: handleLike,\n        color: isLike ? \"green\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), post === null || post === void 0 ? void 0 : post.likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      margin: \"50px 0 10px 0\",\n      component: \"h1\",\n      align: \"center\",\n      children: [\" \", \"Comments (\", post === null || post === void 0 ? void 0 : post.commentCount, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(CommentForm, {\n        id: post === null || post === void 0 ? void 0 : post._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: (_data$comments = data.comments) === null || _data$comments === void 0 ? void 0 : _data$comments.map(comment => /*#__PURE__*/_jsxDEV(CommentBox, {\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"P2CtQQrt8MpuuheAsWIGxCVHCHk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useParams];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["C:/Users/Hp/Downloads/blogAPp/src/pages/PostDetail.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Box","IconButton","Typography","getPostDetail","likePost","useParams","AccountCircle","ThumbUpAlt","moment","CommentBox","CommentForm","PostDetail","dispatch","posts","state","data","post","likes","user","params","isLike","setIsLike","fetchData","title","id","selectedPost","filter","length","_id","fetchIsLike","like","handleLike","author","body","likeCount","commentCount","comments","map","comment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport { getPostDetail, likePost } from \"../redux/actions/dataActions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AccountCircle, ThumbUpAlt } from \"@material-ui/icons\";\r\nimport moment from \"moment\";\r\nimport CommentBox from \"../components/CommentBox\";\r\nimport CommentForm from \"../components/CommentForm\";\r\n\r\nfunction PostDetail() {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.data.posts);\r\n  const post = useSelector((state) => state.data.post.post);\r\n  const data = useSelector((state) => state.data.post);\r\n  const likes = useSelector((state) => state.user.likes);\r\n  const params = useParams();\r\n  const [isLike, setIsLike] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const title = await params.id;\r\n\r\n      const selectedPost = await posts.filter((post) => post.title === title);\r\n      if (selectedPost.length > 0) {\r\n        dispatch(getPostDetail(selectedPost[0]?._id));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dispatch, params.id, posts]);\r\n\r\n  useEffect(() => {\r\n    async function fetchIsLike() {\r\n      const like = await likes.filter((like) => like.post === post?._id).length;\r\n      if (like > 0) {\r\n        setIsLike(true);\r\n      } else {\r\n        setIsLike(false);\r\n      }\r\n    }\r\n    fetchIsLike();\r\n  }, [likes, post?._id]);\r\n  const handleLike = () => {\r\n    dispatch(likePost(post._id));\r\n    setIsLike(!isLike);\r\n  };\r\n  return (\r\n    <Box margin={\"0 0 50px 0\"}>\r\n      <Box>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          {post?.title}\r\n        </Typography>\r\n        <Box align=\"right\" variant=\"body2\">\r\n          <IconButton size=\"small\">\r\n            <AccountCircle />\r\n            {post?.author}\r\n          </IconButton>\r\n          {/* {post && moment(post?.createdAt).fromNow()} */}\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <Typography variant=\"body1\">{post?.body}</Typography>\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" marginTop=\"10px\">\r\n        <Box\r\n          component={IconButton}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          onClick={handleLike}\r\n          color={isLike ? \"green\" : \"\"}\r\n        >\r\n          <ThumbUpAlt />\r\n\r\n          {post?.likeCount}\r\n        </Box>\r\n      </Box>\r\n      <Box margin=\"50px 0 10px 0\" component=\"h1\" align=\"center\">\r\n        {\" \"}\r\n        Comments ({post?.commentCount})\r\n      </Box>\r\n      <Box>\r\n        <CommentForm id={post?._id} />\r\n      </Box>\r\n      <Box>\r\n        {data.comments?.map((comment) => (\r\n          <CommentBox key={comment._id} comment={comment} />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n"]},"metadata":{},"sourceType":"module"}