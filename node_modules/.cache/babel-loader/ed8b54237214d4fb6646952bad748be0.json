{"ast":null,"code":"import { SET_POSTS, SET_POST, LOADING_DATA, LIKE_POST, COMMENT_POST, CREATE_POST } from \"../types\";\nimport axios from \"axios\";\nexport const getPosts = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(\"/posts\").then(res => {\n    dispatch({\n      type: SET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.message);\n  });\n};\nexport const getPostDetail = id => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/posts/${id}`).then(res => {\n    dispatch({\n      type: SET_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.message);\n  });\n};\nexport const likePost = id => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/posts/${id}/like`).then(res => {\n    dispatch({\n      type: LIKE_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.message);\n  });\n};\nexport const commentPost = (id, data) => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.post(`/posts/${id}/comment`, data).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: COMMENT_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.message);\n  });\n};\nexport const createPost = data => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  console.log(data);\n  axios.post(`/posts`, data).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.message);\n  });\n};","map":{"version":3,"sources":["C:/Users/Hp/Downloads/blogAPp/src/redux/actions/dataActions.js"],"names":["SET_POSTS","SET_POST","LOADING_DATA","LIKE_POST","COMMENT_POST","CREATE_POST","axios","getPosts","dispatch","type","get","then","res","payload","data","catch","err","console","log","message","getPostDetail","id","likePost","commentPost","post","createPost"],"mappings":"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","sourcesContent":["import {\r\n  SET_POSTS,\r\n  SET_POST,\r\n  LOADING_DATA,\r\n  LIKE_POST,\r\n  COMMENT_POST,\r\n  CREATE_POST,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getPosts = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_DATA,\r\n  });\r\n  axios\r\n    .get(\"/posts\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_POSTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });\r\n};\r\nexport const getPostDetail = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_DATA,\r\n  });\r\n  axios\r\n    .get(`/posts/${id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_POST,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });\r\n};\r\nexport const likePost = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_DATA,\r\n  });\r\n  axios\r\n    .get(`/posts/${id}/like`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LIKE_POST,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });\r\n};\r\nexport const commentPost = (id, data) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_DATA,\r\n  });\r\n  axios\r\n    .post(`/posts/${id}/comment`, data)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: COMMENT_POST,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });\r\n};\r\nexport const createPost = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_DATA,\r\n  });\r\n  console.log(data);\r\n  axios\r\n    .post(`/posts`, data)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: CREATE_POST,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}